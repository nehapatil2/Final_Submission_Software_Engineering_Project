name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up PHP environment
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'  # You can change this to the PHP version you're using
        extensions: mbstring, xml, bcmath, curl  # Add any other required PHP extensions

    # Install dependencies using Composer
    - name: Install dependencies
      run: |
        curl -sS https://getcomposer.org/installer | php
        php composer.phar install

    # Run PHPUnit tests
    - name: Run PHPUnit tests
      run: |
        vendor/phpunit.xml --configuration phpunit.xml

  # Optional: Deploy to a server or cloud provider
  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure that the deploy job only runs if the build job is successful

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'  # Match the PHP version as per your project requirements
        extensions: mbstring, xml, bcmath, curl  # Add other required extensions

    # Example deployment step (adjust for your deployment process)
    - name: Deploy to server
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      run: |
        echo "Deploying to server..."
        # Add deployment steps like rsync, scp, FTP, or using a specific CLI tool
        # Example for SSH Deployment:
        # ssh -i $DEPLOY_KEY user@yourserver.com "cd /path/to/project && git pull && composer install"

    # Optionally, notify a Slack channel or other tools about the deployment status
    - name: Notify deployment success
      if: success()
      uses: slackapi/slack-github-action@v1
      with:
        payload: |
          {
            "channel": "#your-slack-channel",
            "text": "Deployment Successful!"
          }
